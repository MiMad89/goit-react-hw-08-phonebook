{"version":3,"file":"static/js/phonebook-page.6d56a414.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","pages/Phonebook.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => dispatch(filterContact(e.target.value));\n\n  return (\n    <div>\n      <h3>Find contacts by name</h3>\n      <input onChange={handleFilter} placeholder=\"Enter name\" />\n    </div>\n  );\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filters;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        if (filter === '') {\n            return contacts;\n        } else {\n            return contacts.filter(contact =>\n                contact.name.toLowerCase().includes(filter.filter),\n            );\n        }\n    },\n);\n","import { useDispatch, useSelector } from 'react-redux';\n// import css from './ContactsForm.module.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Button, TextField } from '@mui/material';\n\nconst styles = {\n  containerDiv: ['flex', 'justify-center', 'mt-28'].join(' '),\n  contactForm: [\n    'flex',\n    'flex-col',\n    'border-2',\n    'p-14',\n    'rounded-3xl',\n    'shadow-lg',\n  ].join(' '),\n  label: 'mb-5',\n};\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map(contact => contact.name);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n\n    if (stateContactsNames.includes(contact.name)) {\n      e.target.reset();\n      return alert(`${contact.name} is alredy in contacts`);\n    }\n\n    dispatch(addContact(contact));\n\n    e.target.reset();\n  };\n\n  return (\n    <div className={styles.containerDiv}>\n      <form className={styles.contactForm} onSubmit={handleSubmit}>\n        <label className={styles.label} />\n          <TextField\n          type=\"text\"\n          size=\"small\"\n          name=\"name\"\n          label=\"Name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label className={styles.label} />\n        <TextField\n            type=\"tel\"\n            size=\"small\"\n            name=\"number\"\n            label=\"Number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        <Button type=\"submit\" variant=\"contained\">\n        Add contact\n        </Button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\",\"contactsListItem\":\"ContactsList_contactsListItem__DDy5j\",\"button\":\"ContactsList_button__EDc5e\"};","import { useSelector, useDispatch } from 'react-redux';\nimport css from './ContactsList.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = (id) => dispatch(deleteContact(id));\n\n  return (\n    <ul className={css.contactsList}>\n      {contacts.map(contact => (\n        <li key={contact.id} className={css.contactsItem}>\n          <div>\n            <div>\n              {contact.name}: {contact.number}\n            </div>\n            <button type=\"submit\" value={contact.id} onClick={() => handleDelete(contact.id)}>\n              Delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Filter } from 'components/Filter';\nimport { ContactsForm } from 'components/ContactsForm';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nconst Phonebook = () => {\n  const isLoading = useSelector(selectLoading);\n  const isError = useSelector(selectError);\n\n  return (\n    <div>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n      </HelmetProvider>\n\n      <h2>Phonebook</h2>\n      <ContactsForm />\n      <Filter />\n      {isLoading ? <p>Loading contacts...</p> : <ContactsList />}\n      {isError && <p>Something went wrong. Try again later.</p>}\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["Filter","dispatch","useDispatch","onChange","e","filterContact","target","value","placeholder","selectContacts","state","contacts","selectLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filters","filter","contact","name","toLowerCase","includes","styles","containerDiv","join","contactForm","label","ContactsForm","stateContactsNames","useSelector","map","className","onSubmit","preventDefault","elements","number","reset","alert","addContact","TextField","type","size","title","required","Button","variant","ContactsList","css","id","onClick","deleteContact","isError"],"sourceRoot":""}